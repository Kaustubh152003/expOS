//loading libary
loadi(63,13);
loadi(64,14);

//loading exception handler
loadi(2,15);
loadi(3,16);

//loading timer interrupt
loadi(4,17);
loadi(5,18);

//loading int 7
loadi(16,29);
loadi(17,30);

//loading int 10
loadi(22,35);
loadi(23,36);

//loading idle program
loadi(69,11);
loadi(70,12);



//setting up page table for idle program
PTBR=PAGE_TABLE_BASE;
PTLR=10;

//loading library for pages 0 and 1 
[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

//loading heap  in pages 2 and 3 (for idle process, no requirement of heap)
[PTBR+4]=-1;
[PTBR+5]="0000";
[PTBR+6]=-1;
[PTBR+7]="0000";

//loading code in pages 4,5,6,7
[PTBR+8]=69;
[PTBR+9]="0100";
[PTBR+10]=70;
[PTBR+11]="0100";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

//loading stack in pages 8 and 9
[PTBR+16]=81;
[PTBR+17]="0110";
[PTBR+18]=-1;
[PTBR+19]="0000";

//setting up IP on stack
[81*512]=[69*512+1];
SP=8*512;

//setting up process table
[PROCESS_TABLE+1]=0;
[PROCESS_TABLE+4]=CREATED;
[PROCESS_TABLE+11]=82;
[PROCESS_TABLE+12]=0;
[PROCESS_TABLE+13]=SP;
[PROCESS_TABLE+14]=PTBR;
[PROCESS_TABLE+15]=PTLR;





//loading init program
loadi(65,7);
loadi(66,8);

//setting up page table for init
PTBR=PAGE_TABLE_BASE+20;
PTLR=10;

//library for page 0 and 1
[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

//heap for page 2 and 3
[PTBR+4]=78;
[PTBR+5]="0110";
[PTBR+6]=79;
[PTBR+7]="0110";

//code for page 4,5,6,7 (in this case only 4 and 5 as we have only 2 blocks of code)
[PTBR+8]=65;
[PTBR+9]="0100";
[PTBR+10]=66;
[PTBR+11]="0100";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

//stack for page 8 and 9
[PTBR+16]=76;
[PTBR+17]="0110";
[PTBR+18]=77;
[PTBR+19]="0110";

//setting stack pointer(reference to USER mode) and IP(on top of stack)
SP=8*512;
[76*512]=[65*512+1];

//setting up process table
[PROCESS_TABLE+16+1]=1;
[PROCESS_TABLE+16+4]=RUNNING;
[PROCESS_TABLE+16+11]=80;
[PROCESS_TABLE+16+12]=0;
[PROCESS_TABLE+16+13]=SP;
[PROCESS_TABLE+16+14]=PTBR;
[PROCESS_TABLE+16+15]=PTLR;


//setting up system table
[SYSTEM_STATUS_TABLE+1]=1;
ireturn;