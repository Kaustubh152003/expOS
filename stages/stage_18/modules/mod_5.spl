alias PID R15;
alias x R14;
alias og R13;
multipush (BP);
PID=[SYSTEM_STATUS_TABLE+1];
[PROCESS_TABLE+PID*16+12]=SP%512;
[PROCESS_TABLE+PID*16+14]=PTBR;
[PROCESS_TABLE+PID*16+15]=PTLR;


//getting next in line PID
if(PID==15) 
then
PID=0;
else
PID=PID+1;
endif;

//switching processes

x=[PROCESS_TABLE+PID*16+4];
while(x!=CREATED && x!=READY)
do
if(PID==15)
then
PID=0;
else
PID=PID+1;
endif;
x=[PROCESS_TABLE+PID*16+4];
endwhile;

PTBR=[PROCESS_TABLE+PID*16+14];
PTLR=[PROCESS_TABLE+PID*16+15];
[SYSTEM_STATUS_TABLE+1]=PID;
SP=[PROCESS_TABLE+PID*16+11]*512+[PROCESS_TABLE+PID*16+12];
if([PROCESS_TABLE+PID*16+4]==READY)
then
[PROCESS_TABLE+PID*16+4]=RUNNING;
multipop (BP);
return;
else
SP=[PROCESS_TABLE+PID*16+13];
[PROCESS_TABLE+PID*16+9]=0;
[PROCESS_TABLE+PID*16+4]=RUNNING;
//breakpoint;
ireturn;
endif;

