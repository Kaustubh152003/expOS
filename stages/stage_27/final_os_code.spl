alias PID R2;
loadi(54,67);
loadi(55,68);
loadi(69,11);
loadi(70,12);
SP=70*512-1;
call BOOT_MODULE;



//setting up page table for pager daemon
PID=15;
PTBR=PAGE_TABLE_BASE+PID*20;
PTLR=10;
//library
[PTBR]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";
[PTBR+4]=-1;
[PTBR+5]="0000";
[PTBR+6]=-1;
[PTBR+7]="0000";
[PTBR+8]=69;
[PTBR+9]="0100";
[PTBR+10]=-1;
[PTBR+11]="0000";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";
[PTBR+16]=81;
[PTBR+17]="0110";
[PTBR+18]=-1;
[PTBR+19]="0000";

//setting up process table
[PROCESS_TABLE+PID*16+1]=PID;
[PROCESS_TABLE+PID*16+3]=0;
[PROCESS_TABLE+PID*16+4]=CREATED;
[PROCESS_TABLE+PID*16+11]=82;
[PROCESS_TABLE+PID*16+12]=0;
[PROCESS_TABLE+PID*16+13]=8*512;
[PROCESS_TABLE+PID*16+14]=PTBR;
[PROCESS_TABLE+PID*16+15]=PTLR;

//setting IP on stack
[81*512]=[69*512+1];

//setting up page table for idle process
PTBR=PAGE_TABLE_BASE;
PTLR=10;

//library
[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

//heap
[PTBR+4]=-1;
[PTBR+5]="0000";
[PTBR+6]=-1;
[PTBR+7]="0000";

//code
[PTBR+8]=69;
[PTBR+9]="0100";
[PTBR+10]=-1;
[PTBR+11]="0000";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

//stack
[PTBR+16]=76;
[PTBR+17]="0110";
[PTBR+18]=-1;
[PTBR+19]="0000";

SP=8*512;
[76*512]=[69*512+1];
//setting up process table
[PROCESS_TABLE+1]=0;
[PROCESS_TABLE+4]=RUNNING;
[PROCESS_TABLE+11]=70;
[PROCESS_TABLE+12]=0;
[PROCESS_TABLE+13]=SP;
[PROCESS_TABLE+14]=PTBR;
[PROCESS_TABLE+15]=PTLR;

[SYSTEM_STATUS_TABLE+1]=0;
ireturn;

