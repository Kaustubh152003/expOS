//file manager module
alias ret R0;
alias fno R1;
alias PID R2;
alias val R3;
alias x R4;
alias y R5;
alias z R6;
alias p R7;
alias q R8;
alias bv R9;

if(fno==1) //buffered_write
then
ret=-1;
endif;

if(fno==2) //buffered_read
then
//val has disk block number
//x has offset
// y has physical memory adress
bv=val%4;
multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9); 
fno=1;
val=bv;
call MOD_0;
multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9);
if([BUFFER_TABLE+4*bv]!=val)
then
if([BUFFER_TABLE+4*bv+1]==1)
then
multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9); 
fno=1;
val=71+bv;
x=[BUFFER_TABLE+4*bv];
call MOD_4;
multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9);
[BUFFER_TABLE+4*bv+1]=0;
endif;
multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9); 
fno=2;
x=val;
val=71+bv;
call MOD_4;
multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9);
[BUFFER_TABLE+4*bv]=val;

endif;
[y]=[(71+bv)*512+x];
multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9); 
fno=2;
val=bv;
call MOD_0;
multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9);
endif;






if(fno==3) //open
then
x=0;
while(x<MAX_FILE_NUM && [INODE_TABLE+16*x+1]!=val)
do
x=x+1;
endwhile;
if(x==MAX_FILE_NUM)
then
print "err:m33";
ret=-1;
else
multipush(R1,R2,R3,R4,R5,R6,R7); //acquire inode
val=x;
fno=4;
call MOD_0;
multipop(R1,R2,R3,R4,R5,R6,R7);
if(ret==-1 || [INODE_TABLE+16*x]==EXEC)
then
ret=-1;
else
y=0;
while(y<MAX_OPENFILE_NUM && [OPEN_FILE_TABLE+4*y]!=-1)
do
y=y+1;
endwhile;
if(y==MAX_OPENFILE_NUM)
then
ret=-2;
else
if(val=="root")
then
[OPEN_FILE_TABLE+4*y]=INODE_ROOT;
else
if([FILE_STATUS_TABLE+x*4+1]==-1)
then
[FILE_STATUS_TABLE+x*4+1]=1;
else
[FILE_STATUS_TABLE+x*4+1]=[FILE_STATUS_TABLE+x*4+1]+1;
endif;
[OPEN_FILE_TABLE+4*y]=x;
endif;
[OPEN_FILE_TABLE+y*4+1]=1;
[OPEN_FILE_TABLE+y*4+2]=0;
multipush(R1,R2,R3,R4,R5,R6,R7); //release inode
val=x;
fno=5;
call MOD_0;
multipop(R1,R2,R3,R4,R5,R6,R7);
ret=y;
endif;
endif;
endif;
endif;






if(fno==4) //close
then
x=[OPEN_FILE_TABLE+4*val];
[OPEN_FILE_TABLE+4*val+1]=[OPEN_FILE_TABLE+4*val+1]-1;
if([OPEN_FILE_TABLE+4*val+1]==0)
then
[OPEN_FILE_TABLE+4*val]=-1;
[OPEN_FILE_TABLE+4*val+1]=-1;
[OPEN_FILE_TABLE+4*val+2]=-1;
if(x!=INODE_ROOT)
then
[FILE_STATUS_TABLE+4*x+1]=[FILE_STATUS_TABLE+4*x+1]-1;
if([FILE_STATUS_TABLE+4*x+1]==0)
then
[FILE_STATUS_TABLE+4*x+1]=-1;
endif;
endif;

endif;
endif;





return;